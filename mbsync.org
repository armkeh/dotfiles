#+Title: My literate isync settings
#+Author: Mark Armstrong
#+Description: A literate setup for isync.
#+Property: header-args :tangle ./conf/.mbsyncrc

* Introduction

[[https://isync.sourceforge.io/][isync]] synchronises local and remote mail directories.
I use it as a backend for using Emacs as a mail client,
since (at least most) Emacs mail clients do not fetch email.

Do note that while the application is named isync, the executable
was at some point renamed to ~mbsync~.

The basic idea of isync is that there are /stores/,
which are collections of mailboxes and may be local or remote
(local stores are directories on the local system)
and /channels/ between stores.

In addition, channels are gathered into groups;
when synchronising, we can choose to synchronise all groups,
or only specific ones.

Herein I setup my local and remote store, define several channels,
and group them into two groups. Each group is then set to be
synchronised at different intervals; one frequently
and the other just regularly.

* Caveats

This setup assumes (at least) isync 1.4.0, as earlier versions
do not support subfolder settings we use
(1.3.0 probably does, but 1.2.1 does not).

At time of writing, to get isync 1.4.0 on Debian, you need
to build from source, which can be found
[[https://sourceforge.net/p/isync/isync/ci/master/tree/][here]].

Note that, in order to set SSLType below, you may need to install the
~libssl-dev~ and ~libsasl2-dev~ packages; see
[[https://groups.google.com/forum/#!topic/mu-discuss/TCWZ_qd4MHw][this]]
discussion.

I believe you will also want to install ~libdb-dev~, based on the ~configure~
script for isync.

* Settings for all channels

All of the settings here can be set or changed for particular
channels, but it's more convenient to place globally (or nearly globally) used
settings before the definition of any channel; they then become the default.
#+begin_src conf
# Propogate mailbox creation both ways.
Create Both

# Propogate mailbox deletion from the server to the local machine.
# This will only remove empty mailboxes.
# Don't go the other way, for safety.
Remove Near

# Automatically expunge deleted emails both locally and on the server.
# By the recommendations in the isync man page, we turn this on.
Expunge Both

# The state of mailboxes is saved to the mailboxes themselves.
# This means we do not have to manually clean up
# the states when removing mailboxes.
SyncState *
#+end_src

* Account details

My Gmail account details.

Notice the use of a password command, so that sensitive information is not
stored here or elsewhere in plaintext.

Of course, upon setting up a new system, the pass file needs to be recreated
(I usually just get a new key each time, revoking the old key).

#+begin_src conf
IMAPAccount gmail
  Host imap.gmail.com
  User markparmstrong@gmail.com
  PassCmd "gpg -q --for-your-eyes-only --no-tty -d ~/.mbsyncpass.gpg"
  SSLType IMAPS
  CertificateFile /etc/ssl/certs/ca-certificates.crt
#+end_src

* Stores

For the moment, I only have two stores; my local system and my Gmail.

** Local

#+begin_src conf
# Local storage details
MaildirStore gmail-local
  # The trailing "/" on the path is important
  Path ~/.mail/gmail/
  Inbox ~/.mail/gmail/Inbox
  SubFolders Verbatim
#+end_src

** Gmail

#+begin_src conf
IMAPStore gmail-remote
  Account gmail
#+end_src

* Channels

Here, it's important to understand how I organise my emails with Gmail.
I try to practice “Inbox 0”, and so I organise emails into numerous folders.
There are top level folders:
- Desk
  - Meant to invoke the idea that these emails are kept on my desk,
    within easy reach, as they need to be followed up on soon or
    referred to regularly.
- Filing
  - Meant to invoke the idea of a filing cabinet kept in my office;
    not within immediate reach, but not very far away.
    There are many levels of nesting here; it's intended to be deep,
    but not too wide.
- Longterm Storage
  - Meant to invoke the idea of boxes stored out of the way.
    There is very little or no nesting here; it's intended to be wide.

I usually only need my inbox, drafts, sent mail and desk synchronised;
filing is much less regularly needed, and longterm storage and trash are
never needed (I can always look things up in Gmail's interface if need be).

** Inbox, sent mail and trash

Synchronise the entire inbox; I don't keep much in there.
#+begin_src conf
Channel gmail-inbox
  Far :gmail-remote:
  Near :gmail-local:
  Patterns "INBOX"
#+end_src

It seems very unlikely I will ever need local access
to even moderately old sent messages;
I can check them remotely, and if I need to followup on such an old message,
probably it is time to start a new thread (so replying to the original
is not needed).
#+begin_src conf
Channel gmail-sent
  Far :gmail-remote:"[Gmail]/Sent Mail"
  Near :gmail-local:"Sent Mail"
  MaxMessages 250
#+end_src

And I should never need more than 100 messages from my trash;
honestly the only reason to synchronise it is to be able to recover
messages that should not be in there locally
(this would be very unlikely, as I don't actually delete much).
#+begin_src conf
Channel gmail-trash
  Far :gmail-remote:"[Gmail]/Trash"
  Near :gmail-local:"Trash"
  MaxMessages 100
#+end_src

** Desk

All the folders under desk should be kept synchronised fully;
ideally, not much piles up there.
If it does in the future, I may have to reevaluate this decision.
#+begin_src conf
Channel gmail-desk
  Far :gmail-remote:
  Near :gmail-local:
  Patterns "Desk\*"
#+end_src

** Filing

I do want to keep all of my filing folders synchronised,
so ~MaxMessage~ is not set here.
#+begin_src conf
Channel gmail-filing
  Far :gmail-remote:
  Near :gmail-local:
  Patterns "Filing\*"
#+end_src

** Longterm storage

For longterm storage, we don't need many messages per folder;
just keep 10, so that the folder exists (and we can move
emails into it).
#+begin_src conf
Channel gmail-longterm
  Far :gmail-remote:
  Near :gmail-local:
  Patterns "Longterm\*"
  MaxMessages 10
#+end_src

** TODO Drafts?

This requires some investigation; ~mu4e~ and Gmail may not “play nicely”
in how they handle drafts. ~mu4e~ and ~mbsync~ together end up creating
multiple versions of a draft, whereas Gmail keeps just one.

* Groups

The two groups are “quick”, which synchronises only the inbox and desk,
and “rest”, which synchronises the rest.
#+begin_src conf
Group gmail-quick
  Channel gmail-inbox
  Channel gmail-desk

Group gmail-rest
  Channel gmail-sent
  Channel gmail-filing
  Channel gmail-longterm
  Channel gmail-trash
#+end_src
