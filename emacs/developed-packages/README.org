#+Title: Personally developed Emacs packages
#+Author: Mark Armstrong
#+Description: My collection of personally developed Emacs packages,
#+Description: kept here as git subtrees for import into my init.

* Usage

This directory contains git subtrees for Emacs packages I have personally developed.
I use this to import them into my Emacs setup, and keep them at the cutting edge
so I can test their usage out.

For convenience, instructions are kept here for setting up, pulling from,
and (perhaps eventually) pushing to the subtrees.
I prefer this over installing them using, e.g., ~package-vc-install~,
because I tinker with these packages within this repository
to allow for testing within my Emacs setup.

We use these code blocks along with ~noweb~ references to reuse the instructions
for each repo.

* Command definitions

Add a subtree.
#+name: subtree-add
#+begin_src sh :var PREFIX="" :var REPO="" :var BRANCH="main" :dir ../..
git subtree add --prefix emacs/developed-packages/${PREFIX} ${REPO} ${BRANCH} --squash
#+end_src

Pull from a subtree.
#+name: subtree-pull
#+begin_src sh :var PREFIX="" :var REPO="" :var BRANCH="main" :dir ../..
git subtree pull --prefix emacs/developed-packages/${PREFIX} ${REPO} ${BRANCH} --squash
#+end_src

Push to a subtree. Note: I haven't got this fully working yet,
because authentication with GitHub is an issue. For now, update the subtree repo directly instead.
#+name: subtree-push
#+begin_src sh :var PREFIX="" :var REMOTE="" :var BRANCH="main" :dir ../..
git subtree push --prefix=emacs/developed-packages/${PREFIX} ${REMOTE} ${BRANCH}
#+end_src

* [[https://github.com/armkeh/consistent-window-splits][consistent-window-splits]]

Set up the subtree.
#+begin_src sh :noweb yes :results none
<<subtree-add("consistent-window-splits","https://github.com/armkeh/consistent-window-splits")>>
#+end_src

Pull in changes from the repository.
#+begin_src sh :noweb yes :results none
<<subtree-pull("consistent-window-splits","https://github.com/armkeh/consistent-window-splits")>>
#+end_src

Add the subtree's repository as a remote in ~git~.
#+begin_src sh
git remote add consistent-window-splits-upstream https://github.com/armkeh/consistent-window-splits
#+end_src

Push changes from the subtree back up.
#+begin_src sh :noweb yes :results none
<<subtree-push("consistent-window-splits","consistent-window-splits-upstream")>>
#+end_src
